version: '1'
services: 
  shop:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   args:
    #     - env=value
    image: egg-user-admin:latest
    container_name: dc-egg-user-admin
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
      - mysql
      # - mongodb
    networks:
      - docker_egg_user_admin
    ports:
      - 3000:3000

  redis:
    # image: redis:3.2-alpine
    image: redis:latest
    container_name: dc-redis
    command: redis-server --appendonly yes --requirepass root
    # volumes:
    #   - shop-redis:/data
    networks:
      - docker_egg_user_admin
    ports:
      - 6379:6379

  mysql:
    # image: mysql:5.7.16
    image: mysql:latest
    restart: always
    container_name: dc-mysql
    volumes:
      # - ./mydir:/mydir
      # - ./datadir:/var/lib/mysql
      # - ./conf/my.cnf:/etc/my.cnf
      # #      数据库还原目录 可将需要还原的sql文件放在这里
      # - /docker/mysql/source:/docker-entrypoint-initdb.d
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      # - "MYSQL_DATABASE=shop"
      # - "TZ=Asia/Shanghai"
    ports:
      - 3306:3306   

  # mongodb:
  #   image: mongo:3.2
  #   restart: always
  #   environment:      
  #     - MONGO_INITDB_ROOT_USERNAME=root
  #     - MONGO_INITDB_ROOT_PASSWORD=root
  #     - MONGO_INITDB_DATABASE=shop
  #   volumes:
  #     - egg-mongo:/data/db
  #     - ./init.d/mongo:/docker-entrypoint-initdb.d
  #   networks:
  #     - docker_egg_user_admin
  #   ports:
  #     - 27017:27017

# volumes:
#   egg-mongo:
#   shop-mysql:  
#   shop-redis:

networks:
  docker_egg_user_admin:
    driver: bridge    
